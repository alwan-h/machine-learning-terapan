# -*- coding: utf-8 -*-
"""prediksi_diabetes.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1G1Lc13Vf2OlbCYo4Vhw5VkSsNTnmBFsu
"""

!jupyter nbconvert --to markdown prediksi_diabetes.ipynb

"""#Laporan Machine Learning Submission 1

##Domain Proyek

Diabetes melitus (DM) atau penyakit kencing manis, yang sering disebut hanya diabetes, adalah gangguan metabolisme yang ditandai dengan kadar gula darah yang tinggi dalam periode waktu yang lama.[1] Gejala umum yang terjadi yaitu sering buang air kecil, haus meningkat, dan nafsu makan meningkat.[2] Jika tidak diobati, diabetes dapat menyebabkan banyak komplikasi.[2] Komplikasi akut dapat mencakup ketoasidosis diabetik, keadaan hiperglikemik hiperosmolar, atau kematian.[3] Komplikasi jangka panjang yang serius yaitu penyakit kardiovaskular, stroke, penyakit ginjal kronis, borok kaki, kerusakan saraf, kerusakan mata, dan gangguan kognitif.[2][4]'

Glukosa adalah karbohidrat alamiah yang digunakan tubuh sebagai sumber energi. Kadar glukosa pada darah dikendalikan oleh beberapa hormon. Insulin adalah hormon yang dibuat oleh pankreas. Ketika  makan, pankreas melepaskan insulin untuk mengirimkan pesan pada sel-sel lainnya di tubuh. Insulin ini memerintahkan sel-sel untuk memproses glukosa dari darah menjadi bentuk yang dapat dimasukkan ke dalam otot atau sel hati. Glukosa yang berlebih disimpan dalam sel-sel sebagai glikogen. Pada saat kadar gula darah mencapai tingkat rendah tertentu, sel-sel memecah glikogen menjadi glukosa untuk menghasilkan energi.

Diabetes disebabkan oleh pankreas yang tidak memproduksi cukup insulin, atau sel-sel tubuh tidak merespons dengan baik terhadap insulin yang diproduksi.[5] Terdapat tiga jenis utama diabetes mellitus:[2]

1. Diabetes melitus tipe 1 disebabkan karena pankreas gagal untuk memproduksi insulin yang cukup karena kehilangan sel beta (Î²).[2] Jenis ini sebelumnya disebut sebagai "diabetes mellitus tergantung insulin" (IDDM) atau "diabetes remaja".[2] Hilangnya sel beta disebabkan oleh respons autoimun.[6] Penyebab respons autoimun ini belum diketahui.[2]
2. Diabetes melitus tipe 2 dimulai dengan resistensi insulin, suatu kondisi yang mana sel-sel gagal merespons insulin dengan baik.[2] Seiring perkembangan penyakit, kekurangan insulin juga dapat terjadi.[7] Bentuk ini sebelumnya disebut sebagai "diabetes mellitus non-dependen insulin" (NIDDM) atau "diabetes onset dewasa".[2] Penyebab paling umum yaitu kombinasi dari berat badan berlebihan dan kurang olahraga.[2]
3. Diabetes gestasional adalah diabetes yang terjadi ketika wanita hamil. Diabetes ini terjadi pada ibu hamil yang sebelumnya tidak memiliki riwayat diabetes, namun saat hamil ibu mengalami kadar gula darah yang tinggi.[2]

Diabetes melitus tipe 1 harus dikelola dengan suntikan insulin.[2] Pencegahan dan pengobatan diabetes tipe 2 melibatkan menjaga pola makan yang sehat, olahraga fisik secara teratur, menjaga berat badan normal, dan tidak merokok.[2] Diabetes tipe 2 dapat diobati dengan Antidiabetik oral seperti sensitizer insulin dengan atau tanpa insulin.[8] Kontrol tekanan darah dalam batas normal dan menjaga perawatan kaki serta mata secara baik merupakan langkah penting bagi penderita penyakit ini.[2] Insulin dan beberapa obat oral dapat menyebabkan gula darah rendah.[9] Operasi penurunan berat badan pada orang-orang yang mengalami obesitas kadang-kadang merupakan upaya yang efektif pada mereka yang menderita diabetes tipe 2.[10] Diabetes gestasional dapat sembuh setelah kelahiran bayi, tapi disarankan ibu untuk konsultasi kepada dokter ahli terlebih dahulu.[11]

Hingga 2019, diperkirakan 463 juta orang menderita diabetes di seluruh dunia (8,8% dari populasi orang dewasa), dengan diabetes tipe 2 merupakan sekitar 90% dari kasus.[12] Tingkat kejadian serupa pada wanita dan pria.[13] Diabetes setidaknya menggandakan risiko kematian dini seseorang.[2] Pada 2019, diabetes mengakibatkan sekitar 4,2 juta kematian.[12] Pada tahun 2013, Indonesia memiliki sekitar 8,5 juta penderita diabetes yang merupakan jumlah keempat terbanyak di Asia dan nomor tujuh di dunia.[14] Dan pada tahun 2020, diperkirakan Indonesia akan memiliki 12 juta penderita diabetes, karena yang mulai terkena diabetes usianya semakin muda.

## Business Understanding

Siabetes melitus (DM) atau yang sering disebut juga kencing manis merupakan penyakit kronis yang ditandai dengan meningkatnya kadar gula (glukosa) darah hingga di atas normal.

Normalnya, makanan yang dikonsumsi akan diproses oleh tubuh menjadi glukosa dan digunakan sebagai energi. Hormon yang berfungsi untuk membantu glukosa diserap oleh sel-sel tubuh adalah insulin. Hormon ini dihasilkan oleh pankreas.

Namun, pada pengidap diabetes, tubuh tidak menghasilkan jumlah insulin yang cukup atau insulin tidak berfungsi sebagaimana mestinya. Kondisi inilah yang mengakibatkan peningkatan kadar gula dalam darah.

Diabetes mellitus merupakan penyakit serius yang tidak boleh disepelekan karena bisa menyebabkan komplikasi kesehatan yang fatal, seperti penyakit jantung, gagal ginjal, kebutaan, amputasi, bahkan kematian. Namun, DM sebenarnya adalah penyakit yang bisa dicegah. Salah satu caranya adalah dengan mengetahui faktor-faktor risiko diabetes mellitus di sini.

### Jenis-Jenis Diabetes Melitus

Secara umum, diabetes mellitus bisa dibedakan menjadi dua jenis, yaitu diabetes tipe 1 dan tipe 2.[17]

Diabetes tipe 1 terjadi karena adanya kondisi autoimun, di mana sistem kekebalan tubuh pengidap sendiri yang menyerang dan menghancurkan sel-sel pankreas yang memproduksi insulin. Hal ini mengakibatkan kadar gula darah jadi meningkat, sehingga memicu terjadinya kerusakan pada organ-organ tubuh. Masih belum diketahui apa penyebab kondisi autoimun ini. Namun, dugaan paling kuat adalah karena adanya faktor genetik yang dimiliki pengidap dan ditambah lagi dengan faktor lingkungan.[17]

Diabetes tipe 2 merupakan jenis diabetes yang lebih sering terjadi. Diabetes ini disebabkan karena sel-sel tubuh kurang sensitif terhadap insulin, sehingga insulin yang dihasilkan tidak bisa dipergunakan dengan baik (resistensi sel tubuh terhadap insulin). Hampir sebagian besar pengidap diabetes di dunia mengalami diabetes tipe 2.[17]

Selain kedua jenis diabetes tersebut, ada juga jenis diabetes khusus pada ibu hamil yang dinamakan diabetes gestasional. Diabetes pada kehamilan ini disebabkan oleh perubahan hormon, sehingga gula darah biasanya akan kembali normal setelah ibu hamil melahirkan.[17]

### Faktor Risiko Diabetes Melitus

Berikut adalah faktor risiko diabetes tipe 1:
1. Riwayat keluarga pengidap diabetes miltus tipe 1.
2. Infeksi virus.
3. Orang kulit putih.
5. Usia.[17]

Berikut adalah faktor risiko diabetes mellitus tipe 2:
1. Obesitas atau kelebihan berat badan.
2. Riwayat keluarga dengan diabetes tipe 2.
3. Kurang Olahraga.
4. Usia.
5. Tekanan darah tinggi.
6. Kadar kolesterol tidak normal.
7. Polycystic ovarian syndrome (PCOS).
8. Ibu hamil.[17]

###Problem Statements
Faktor - faktor yang mempengaruhi kemungkinan terkena diabetes adalah kehamilan, glukosa, tekanan darah, ketebalan kulit, insulin, berat badan terhadap kemungkinan terkena diabetes.

- Dari serangkaian faktor yang ada, faktor apa yang paling berpengaruh terhadap penyakit Diabetes.
- Berapa besar kemungkinan terkena diabetes terhadap karakteristik atau faktor terntentu.

###Goals
- Mengetahui faktor yang paling berkorelasi dengan penyakti diabetes.
- Membuat model machine learning yang dapat memprediksi terkena diabetes seakurat mungkin berdasarkan fitur-fitur yang ada.

### Solution statements
kita akan mengembangkan model machine learning dengan tiga algoritma. Kemudian, kita akan mengevaluasi performa masing-masing algoritma dan menentukan algoritma mana yang memberikan hasil prediksi terbaik. Ketiga algoritma yang akan kita gunakan, antara lain:
1. K-Nearest Neighbor
- KNN bekerja dengan membandingkan jarak satu sampel ke sampel pelatihan lain dengan memilih sejumlah k tetangga terdekat (dengan k adalah sebuah angka positif).
- Alasan memilih algoritma KNN adalah karena algoritma ini relatif sederhana, dan mudah dimengerti untjuk pemula.
2. Random Forest
- Random forest merupakan salah satu model machine learning yang termasuk ke dalam kategori ensemble (group) learning. Apa itu model ensemble? Sederhananya, ia merupakan model prediksi yang terdiri dari beberapa model dan bekerja secara bersama-sama. Ide dibalik model ensemble adalah sekelompok model yang bekerja bersama menyelesaikan masalah. Sehingga, tingkat keberhasilan akan lebih tinggi dibanding model yang bekerja sendirian. Pada model ensemble, setiap model harus membuat prediksi secara independen. Kemudian, prediksi dari setiap model ensemble ini digabungkan untuk membuat prediksi akhir.
- Alasan memilih algoritma Random Forest adalah dapat digunakan untuk menyelesaikan masalah klasifikasi dan regresi. Random forest juga merupakan algoritma yang sering digunakan karena cukup sederhana tetapi memiliki stabilitas yang mumpuni.
3. Boosting Algorithm
- Boosting Algorithm bertujuan untuk meningkatkan performa atau akurasi prediksi. Caranya adalah dengan menggabungkan beberapa model sederhana dan dianggap lemah (weak learners) sehingga membentuk suatu model yang kuat (strong ensemble learner). Algoritma boosting muncul dari gagasan mengenai apakah algoritma yang sederhana seperti linear regression dan decision tree dapat dimodifikasi untuk dapat meningkatkan performa.
- Alasan pemilihan algoritma Boosting adalah hanya sebagai variasi agar lebih banyak algoritma pembanding.

##Data Understanding
Data yang saya gunakan pada proyek kali ini adalah Database dataset yang diunduh dari
https://www.kaggle.com/datasets/johndasilva/diabetes

Dataset diabetes, diambil dari rumah sakit Frankfurt, Jerman

variable yang ada pada dataset

- Pregnancies = Jumlah kehamilan
- Glucose = konsentrasi glukosa 2 jam dalam tes toleransi glukosa oral
- BloodPressure = Tekanan darah diastolik (mm Hg)
- SkinThickness = Ketebalan lipatan kulit (mm)
- Insulin = 2-Jam serum insulin (mu U / ml)
- BMI = Indeks massa tubuh (berat dalam kg / (tinggi dalam m) ^ 2)
- DiabetesPedigreeFunction = Riwayat keturunan diabetes
- Age = Umur (tahun)
- Variabel Outcome = Class (0 atau 1) 268 dari 768 adalah 1, yang lain adalah 0

Tahapan Pemahaman data:
### Data Loading
"""

import numpy as np # linear algebra
import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)
import matplotlib.pyplot as plt
import seaborn as sns

url = 'diabetes-2.csv'
datadm = pd.read_csv(url)
datadm

"""### Exploratory Data Analysis - Deskripsi Variabel

#### Deskripsi Variabel

- Pregnancies = Jumlah kehamilan
- Glucose = konsentrasi glukosa 2 jam dalam tes toleransi glukosa oral
- BloodPressure = Tekanan darah diastolik (mm Hg)
- SkinThickness = Ketebalan lipatan kulit (mm)
- Insulin = 2-Jam serum insulin (mu U / ml)
- BMI = Indeks massa tubuh (berat dalam kg / (tinggi dalam m) ^ 2)
- DiabetesPedigreeFunction = Riwayat keturunan diabetes
- Age = Umur (tahun)
- Variabel Outcome = Class (0 atau 1) 268 dari 768 adalah 1, yang lain adalah 0
"""

datadm.info()

"""- Terdapat 7 kolom dengan tipe data int64 yaitu : Pregnancies, Glucose, BloodPressure, SkinThickness, Insulin, Age, Outcome.
- Terdapat 2 kolom dengan tipe data float64 yaitu : BMI, DiabetesPedigreeFunction.

Uraian di atas menunjukkan bahwa setiap kolom telah memiliki tipe data yang sesuai. Selanjutnya, mengecek deskripsi statistik data dengan fitur describe().
"""

datadm.describe()

"""Fungsi describe() memberikan informasi statistik pada masing-masing kolom, antara lain:

- Count  adalah jumlah sampel pada data.
- Mean adalah nilai rata-rata.
- Std adalah standar deviasi.
- Min yaitu nilai minimum setiap kolom.
- 25% adalah kuartil pertama. Kuartil adalah nilai yang menandai batas interval dalam empat bagian sebaran yang sama.
- 50% adalah kuartil kedua, atau biasa juga disebut median (nilai tengah).
- 75% adalah kuartil ketiga.
- Max adalah nilai maksimum.

### Exploratory Data Analysis - Menangani Missing Value
Terdapat missing value pada kolom Pregnancies, Glucose, BloodPressure, SkinThickness, Insulin, BMI

pengcekan jumlah missing value
"""

pregnancies = (datadm.Pregnancies == 0).sum()
glucose = (datadm.Glucose == 0).sum()
bloodPressure = (datadm.BloodPressure == 0).sum()
skinThickness = (datadm.SkinThickness == 0).sum()
insulin = (datadm.Insulin == 0).sum()
bmi = (datadm.BMI == 0).sum()
age = (datadm.Age == 0).sum()

print("Nilai 0 di kolom pregnancies ada: ", pregnancies)
print("Nilai 0 di kolom glucose ada: ", glucose)
print("Nilai 0 di kolom bloodPressure ada: ", bloodPressure)
print("Nilai 0 di kolom skinThickness ada: ", skinThickness)
print("Nilai 0 di kolom insulin ada: ", insulin)
print("Nilai 0 di kolom bmi ada: ", bmi)
print("Nilai 0 di kolom age ada: ", age)

"""Catatan : Insulin tidak masuk ke pengecekan missing value karena memang ada kadar hormon insluin 0"""

datadm.loc[(datadm['SkinThickness']==0)]

datadm.isnull().sum()

datadm = datadm.loc[(datadm[['BloodPressure','SkinThickness','BMI']]!=0).all(axis=1)]

datadm.shape

"""###Exploratory Data Analysis - Menangani Missing Value"""

sns.boxplot(x=datadm['Pregnancies'])

sns.boxplot(x=datadm['Glucose'])

sns.boxplot(x=datadm['BloodPressure'])

sns.boxplot(x=datadm['SkinThickness'])

sns.boxplot(x=datadm['Insulin'])

sns.boxplot(x=datadm['BMI'])

sns.boxplot(x=datadm['DiabetesPedigreeFunction'])

sns.boxplot(x=datadm['Age'])

Q1 = datadm.quantile(0.25)
Q3 = datadm.quantile(0.75)

IQR=Q3-Q1
datadm=datadm[~((datadm<(Q1-1.5*IQR))|(datadm>(Q3+1.5*IQR))).any(axis=1)]

# Cek ukuran dataset setelah kita drop outliers
datadm.shape

"""###Univariate Analysis"""

numerical_features = ['Pregnancies', 'Glucose', 'BloodPressure', 'SkinThickness', 'Insulin', 'BMI', 'DiabetesPedigreeFunction', 'Age']
categorical_features = ['Outcome']

"""####Categorical Features
#####Fitur Outcome
"""

feature = categorical_features[0]
count = datadm[feature].value_counts()
percent = 100*datadm[feature].value_counts(normalize=True)
df = pd.DataFrame({'jumlah sampel':count, 'persentase':percent.round(1)})
print(df)
count.plot(kind='bar', title=feature);

"""Dari diagram di atas dapat disimpulkan bahawa presentase tidak terkena diabetes lebih besar dari yang terkena diabetes

####Numerical Features
"""

datadm.hist(bins=50, figsize=(20,15))
plt.show()

"""Dari histogram di atas dapat diamati bahwa
- Jumlah pregnan terbanyak ada di rentang 0 sampai 2
- Kandungan glukosa di atas normal (140) pada pasien lumayan banyak
- Tekanan darah pasien rata - rata normal
- Ketebalan kulit mempunyai korelasi dengna jumlah lemak di badan
- Banyak pasien yang tidak memproduksi insulin
- Riwayat keturunan diabetes paling tinggi antara rentang 0.2 - 0.3

###Multivariate Analysis

####Numerical Features
"""

sns.pairplot(datadm, diag_kind = 'kde')

plt.figure(figsize=(10, 8))
correlation_matrix = datadm.corr().round(2)

# Untuk menge-print nilai di dalam kotak, gunakan parameter anot=True
sns.heatmap(data=correlation_matrix, annot=True, cmap='coolwarm', linewidths=0.5, )
plt.title("Correlation Matrix untuk Fitur Numerik ", size=20)

"""###Data Preparation

####Train-Test-Split
"""

from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score

X = datadm.drop(["Outcome"],axis =1)
y = datadm["Outcome"]
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.1, random_state = 123)

print(f'Total # of sample in whole dataset: {len(X)}')
print(f'Total # of sample in train dataset: {len(X_train)}')
print(f'Total # of sample in test dataset: {len(X_test)}')

"""####Standarisasi"""

from sklearn.preprocessing import StandardScaler

numerical_features = ['Pregnancies', 'Glucose', 'BloodPressure', 'SkinThickness', 'Insulin', 'BMI', 'DiabetesPedigreeFunction', 'Age']
scaler = StandardScaler()
scaler.fit(X_train[numerical_features])
X_train[numerical_features] = scaler.transform(X_train.loc[:, numerical_features])
X_train[numerical_features].head()

X_train[numerical_features].describe().round(4)

"""###Model Development

####Model Development dengan K-Nearest Neighbor
"""

models = pd.DataFrame(index=['train_mse', 'test_mse'],
                      columns=['KNN', 'RandomForest', 'Boosting'])

from sklearn.neighbors import KNeighborsRegressor
from sklearn.metrics import mean_squared_error

knn = KNeighborsRegressor(n_neighbors=10)
knn.fit(X_train, y_train)

models.loc['train_mse','knn'] = mean_squared_error(y_pred = knn.predict(X_train), y_true=y_train)

"""Paremeter menggunakan n_neighbors=10 dan metric Euclidean untuk mengukur jarak antara titik.

####Model Development dengan Random Forest
"""

# Impor library yang dibutuhkan
from sklearn.ensemble import RandomForestRegressor

# buat model prediksi
RF = RandomForestRegressor(n_estimators=50, max_depth=16, random_state=55, n_jobs=-1)
RF.fit(X_train, y_train)

models.loc['train_mse','RandomForest'] = mean_squared_error(y_pred=RF.predict(X_train), y_true=y_train)

"""Berikut adalah parameter-parameter yang digunakan:

- n_estimator: jumlah trees (pohon) di forest. Di sini kita set - - n_estimator=50.
- max_depth: kedalaman atau panjang pohon. Ia merupakan ukuran seberapa banyak pohon dapat membelah (splitting) untuk membagi setiap node ke dalam jumlah pengamatan yang diinginkan.
- random_state: digunakan untuk mengontrol random number generator yang digunakan.
- n_jobs: jumlah job (pekerjaan) yang digunakan secara paralel. Ia merupakan komponen untuk mengontrol thread atau proses yang berjalan secara paralel. n_jobs=-1 artinya semua proses berjalan secara paralel.

####Model Development dengan Boosting Algorithm
"""

from sklearn.ensemble import AdaBoostRegressor

boosting = AdaBoostRegressor(learning_rate=0.05, random_state=55)
boosting.fit(X_train, y_train)
models.loc['train_mse','Boosting'] = mean_squared_error(y_pred=boosting.predict(X_train), y_true=y_train)

"""Berikut merupakan parameter-parameter yang digunakan pada potongan kode di atas.

- learning_rate: bobot yang diterapkan pada setiap regressor di masing-masing proses iterasi boosting.
- random_state: digunakan untuk mengontrol random number generator yang digunakan.

####Evaluasi Model
"""

# Lakukan scaling terhadap fitur numerik pada X_test sehingga memiliki rata-rata=0 dan varians=1
X_test.loc[:, numerical_features] = scaler.transform(X_test[numerical_features])

# Buat variabel mse yang isinya adalah dataframe nilai mse data train dan test pada masing-masing algoritma
mse = pd.DataFrame(columns=['train', 'test'], index=['KNN','RF','Boosting'])

# Buat dictionary untuk setiap algoritma yang digunakan
model_dict = {'KNN': knn, 'RF': RF, 'Boosting': boosting}

# Hitung Mean Squared Error masing-masing algoritma pada data train dan test
for name, model in model_dict.items():
    mse.loc[name, 'train'] = mean_squared_error(y_true=y_train, y_pred=model.predict(X_train))/1e3
    mse.loc[name, 'test'] = mean_squared_error(y_true=y_test, y_pred=model.predict(X_test))/1e3

# Panggil mse
mse

fig, ax = plt.subplots()
mse.sort_values(by='test', ascending=False).plot(kind='barh', ax=ax, zorder=3)
ax.grid(zorder=0)

"""####Pengujian model"""

prediksi = X_test.iloc[:10].copy()
pred_dict = {'outcome':y_test[:10]}
for name, model in model_dict.items():
    pred_dict['prediksi_'+name] = model.predict(prediksi).round(1)

pd.DataFrame(pred_dict)

"""Dari tabel 10 terlihat bahwa prediksi dengan *Random Forest (RF)* memberikan hasil yang paling mendekati nilai Outcome.

### Kesimpulan

Keberhasilan proyek *predictive analytics* tidak hanya ditentukan oleh pemilihan algoritma machine learning saja, melainkan juga penerapan metodologi standar dalam mengelola seluruh tahapan atau siklus proyek.

Dan dari percobaan yang telah dilakukan, maka dapat disimpulkan bahwa algoritma *Random Forest (RF)* merupakan algoritma terbaik untuk memprediksi apakah seseorang terindikasi terkena diabetes atau tidak berdasarkan dataset yang kita gunuakan untuk pelatihan model.

### Daftar Refrensi
1. *"About diabetes". World Health Organization*. Diarsipkan dari versi asli tanggal 31 March 2014. Diakses tanggal 4 April 2014.
2. *"Diabetes Fact sheet NÂ°312". WHO. October 2013*. Diarsipkan dari versi asli tanggal 26 August 2013. Diakses tanggal 25 March 2014.
Kitabchi AE, Umpierrez GE, Miles JM, Fisher JN (July 2009).
3. "Hyperglycemic crises in adult patients with diabetes". Diabetes Care. 32 (7): 1335â43. doi:10.2337/dc09-9032. PMC 2699725â¯alt=Dapat diakses gratis. PMID 19564476.
4. Saedi, E; Gheini, MR; Faiz, F; Arami, MA (15 September 2016). "Diabetes mellitus and cognitive impairments". World Journal of Diabetes. 7 (17): 412â22. doi:10.4239/wjd.v7.i17.412. PMC 5027005â¯alt=Dapat diakses gratis. PMID 27660698.
5. Shoback DG, Gardner D, ed. (2011). "Chapter 17". Greenspan's basic & clinical endocrinology (edisi ke-9th). New York: McGraw-Hill Medical. ISBN 978-0-07-162243-1.
6. Norman A, Henry H (2015). Hormones. Elsevier. hlm. 136â137. ISBN 9780123694447.
7. *RSSDI textbook of diabetes mellitus (edisi ke-Revised 2nd). Jaypee Brothers Medical Publishers*. 2012. hlm. 235. ISBN 978-93-5025-489-9. Diarsipkan dari versi asli tanggal 14 October 2015.
8. *"The top 10 causes of death Fact sheet NÂ°310". World Health Organization*. October 2013. Diarsipkan dari versi asli tanggal 30 May 2017.
9. Rippe RS, Irwin JM, ed. (2010). *Manual of intensive care medicine* (edisi ke-5th). Wolters Kluwer Health/Lippincott Williams & Wilkins. hlm. 549. ISBN 978-0-7817-9992-8.
10. Picot J, Jones J, Colquitt JL, Gospodarevskaya E, Loveman E, Baxter L, Clegg AJ (September 2009). *"The clinical effectiveness and cost-effectiveness of bariatric (weight loss) surgery for obesity: a systematic review and economic evaluation". Health Technology Assessment*. 13 (41): 1â190, 215â357, iiiâiv. doi:10.3310/hta13410. PMID 19726018.
11. Cash, Jill (2014). *Family Practice Guidelines* (edisi ke-3rd). Springer. hlm. 396. ISBN 978-0-8261-6875-7. Diarsipkan dari versi asli tanggal 31 October 2015.
12. *"IDF DIABETES ATLAS Ninth Edition 2019"* (PDF). www.diabetesatlas.org (dalam bahasa Inggris). Diakses tanggal 18 May 2020.
13. Vos T, Flaxman AD, Naghavi M, Lozano R, Michaud C, Ezzati M, et al. (December 2012). *"Years lived with disability (YLDs) for 1160 sequelae of 289 diseases and injuries 1990â2010: a systematic analysis for the Global Burden of Disease Study 2010". Lancet*. 380 (9859): 2163â96. doi:10.1016/S0140-6736(12)61729-2. PMC 6350784â¯alt=Dapat diakses gratis. PMID 23245607.
14. *"Simple treatment to curb diabetes"*. January 20, 2014. Diarsipkan dari versi asli tanggal 2014-02-02. Diakses tanggal 2014-01-20.
15. Breiman, L. 2022. Random Forest. *Machine Learning*. 45: 5-32.
16.  Febryananda, A.R. 2022. Mengenal Teknik *Gradient Boosting* dalam Algoritma *Machine Learning.* Laboratorium Analisis Data dan Rekaya Kualitas. [link](https://lab_adrk.ub.ac.id/id/mengenal-teknik-gradient-boosting-dalam-algoritma-machine-learning/). [accessed May. 29 2023]
17. https://www.halodoc.com/artikel/12-faktor-ini-tingkatkan-risiko-diabetes-melitus
"""